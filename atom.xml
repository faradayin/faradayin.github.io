<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>像风一样</title>
  
  <subtitle>自由</subtitle>
  <link href="https://fyin.top/atom.xml" rel="self"/>
  
  <link href="https://fyin.top/"/>
  <updated>2021-06-05T20:16:22.767Z</updated>
  <id>https://fyin.top/</id>
  
  <author>
    <name>Luke</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>测试页</title>
    <link href="https://fyin.top/2021/06/06/%E6%B5%8B%E8%AF%95%E9%A1%B5/"/>
    <id>https://fyin.top/2021/06/06/%E6%B5%8B%E8%AF%95%E9%A1%B5/</id>
    <published>2021-06-05T20:13:39.000Z</published>
    <updated>2021-06-05T20:16:22.767Z</updated>
    
    <content type="html"><![CDATA[<p>这个测试</p><p>包括：数学公式、tag、<br>$e=mc^2$</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这个测试&lt;/p&gt;
&lt;p&gt;包括：数学公式、tag、&lt;br&gt;$e=mc^2$&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="Test" scheme="https://fyin.top/tags/Test/"/>
    
    <category term="数学" scheme="https://fyin.top/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>C++之顺序容器适配器（栈与队列）</title>
    <link href="https://fyin.top/2019/05/12/C-%E4%B9%8B%E9%A1%BA%E5%BA%8F%E5%AE%B9%E5%99%A8%E9%80%82%E9%85%8D%E5%99%A8%EF%BC%88%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97%EF%BC%89/"/>
    <id>https://fyin.top/2019/05/12/C-%E4%B9%8B%E9%A1%BA%E5%BA%8F%E5%AE%B9%E5%99%A8%E9%80%82%E9%85%8D%E5%99%A8%EF%BC%88%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97%EF%BC%89/</id>
    <published>2019-05-12T08:56:13.000Z</published>
    <updated>2021-06-05T20:02:49.613Z</updated>
    
    <content type="html"><![CDATA[<p><strong>适配器</strong>(adaptor)是一个通用概念，<strong>容器、迭代器、函数都有适配器</strong></p><p>C++标准库定义了三个顺序容器适配器：<strong>stack</strong>和 <strong>queue</strong>、<strong>priority_queue</strong></p><h2 id="栈-stack"><a href="#栈-stack" class="headerlink" title="栈 stack"></a>栈 stack</h2><p>头文件 <code>include &lt;stack&gt;</code></p><p><strong>底层</strong> 默认是通过<strong>deque</strong>实现，也可以通过<strong>list</strong>、<strong>vector</strong>实现。</p><p>关于deque</p><blockquote><p>双端队列，一种连续空间（实际上是一段一段的连续空间，并由一个map结构统一管理）容器；<br>类似于vector、string；<br>deque能够支持快速的随机访问；<br>在头部和尾部添加、删除元素非常快速；<br>但在中间删除和添加元素比较费时。</p></blockquote><p>stack支持的操作</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">s.<span class="built_in">pop</span>()</span><br><span class="line">s.<span class="built_in">push</span>()</span><br><span class="line">s.<span class="built_in">emplace</span>()</span><br><span class="line">s.<span class="built_in">top</span>()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="队列-queue、priority-queue"><a href="#队列-queue、priority-queue" class="headerlink" title="队列 queue、priority_queue"></a>队列 queue、priority_queue</h2><p>queue提供普通的先进先出的队列功能；priority_queue允许我们为队列中的元素建立优先级</p><p>头文件 <code>#include &lt;queue&gt;</code></p><p><strong>queue</strong>默认是通过<strong>deque</strong>实现；<strong>priority_queue</strong>默认是通过<strong>vector</strong>实现<br>queue也可以通过list或vector实现；priority_queue也可以通过deque实现</p><p>queue支持的操作</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">q.<span class="built_in">pop</span>()<span class="comment">//弹出队首元素</span></span><br><span class="line">q.<span class="built_in">push</span>()<span class="comment">//在队尾追加</span></span><br><span class="line">q.<span class="built_in">emplace</span>()<span class="comment">//在队尾追加</span></span><br><span class="line"></span><br><span class="line">q.<span class="built_in">front</span>()<span class="comment">//返回队首元素</span></span><br><span class="line">q.<span class="built_in">back</span>()<span class="comment">//返回队尾元素，仅适用于queue</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>priority_queue另外支持的操作</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">q.<span class="built_in">top</span>()<span class="comment">//返回优先级最高的元素，仅适用于priority_queue</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;适配器&lt;/strong&gt;(adaptor)是一个通用概念，&lt;strong&gt;容器、迭代器、函数都有适配器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;C++标准库定义了三个顺序容器适配器：&lt;strong&gt;stack&lt;/strong&gt;和 &lt;strong&gt;queue&lt;/str</summary>
      
    
    
    
    
    <category term="技术" scheme="https://fyin.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="计算机" scheme="https://fyin.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>链接</title>
    <link href="https://fyin.top/2018/12/22/%E9%93%BE%E6%8E%A5/"/>
    <id>https://fyin.top/2018/12/22/%E9%93%BE%E6%8E%A5/</id>
    <published>2018-12-22T06:44:35.000Z</published>
    <updated>2018-12-22T06:47:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>关于链接的知识，来自CSAPP</p><h2 id="可重定位目标文件（ELF格式）"><a href="#可重定位目标文件（ELF格式）" class="headerlink" title="可重定位目标文件（ELF格式）"></a>可重定位目标文件（ELF格式）</h2><ul><li>头（ELF header）</li><li>节（sections）： .text .data    …    .symtab .rel.text .rel.data  …</li><li>节头部表（section header table）</li></ul><h2 id="step1-符号解析（Symbol-Resolution）"><a href="#step1-符号解析（Symbol-Resolution）" class="headerlink" title="step1 符号解析（Symbol Resolution）"></a>step1 符号解析（Symbol Resolution）</h2><p>把每个引用，包括全局变量和函数，与<strong>符号表</strong>symtab中一个确定的符号定义关联起来</p><h2 id="step2：重定位（Relocation）"><a href="#step2：重定位（Relocation）" class="headerlink" title="step2：重定位（Relocation）"></a>step2：重定位（Relocation）</h2><ol><li><p>聚合节 ，包括 .text ，.data</p></li><li><p>修改符号引用，依赖于 .rel.text .rel.data</p></li></ol><h2 id="常用函数打包"><a href="#常用函数打包" class="headerlink" title="常用函数打包"></a>常用函数打包</h2><ul><li>静态库（Static Libraries）</li><li>共享库（Shared Libraries）</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;关于链接的知识，来自CSAPP&lt;/p&gt;
&lt;h2 id=&quot;可重定位目标文件（ELF格式）&quot;&gt;&lt;a href=&quot;#可重定位目标文件（ELF格式）&quot; class=&quot;headerlink&quot; title=&quot;可重定位目标文件（ELF格式）&quot;&gt;&lt;/a&gt;可重定位目标文件（ELF格式）&lt;/h</summary>
      
    
    
    
    
    <category term="技术" scheme="https://fyin.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="计算机" scheme="https://fyin.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>gcc的使用</title>
    <link href="https://fyin.top/2018/10/11/gcc%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://fyin.top/2018/10/11/gcc%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2018-10-11T11:15:03.000Z</published>
    <updated>2021-06-05T19:34:35.624Z</updated>
    
    <content type="html"><![CDATA[<p>GCC编译系统：</p><p>​    预处理        编译器        汇编器        链接</p><p>.c    ——&gt;     .i    ——&gt;    .s    ——&gt;    .o    ——&gt;    prog</p><p><code>gcc -Og -S xx.c</code></p><p>-Og 优化等级，还可以是 -O1，-O2</p><p>-S 生成汇编文件xx.s</p><p><code>gcc -Og -c xx.c</code></p><p>-c 生成目标代码文件xx.o</p><p>-E 只运行预处理器</p><p>-o 产生目标文件，后面紧跟要生成的可执行文件名</p><p>反汇编：</p><p><code>objdump -d xx.o</code></p><p><code>objdump -d prog</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;GCC编译系统：&lt;/p&gt;
&lt;p&gt;​    预处理        编译器        汇编器        链接&lt;/p&gt;
&lt;p&gt;.c    ——&amp;gt;     .i    ——&amp;gt;    .s    ——&amp;gt;    .o    ——&amp;gt;    prog&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="技术" scheme="https://fyin.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="计算机" scheme="https://fyin.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>SSH初探</title>
    <link href="https://fyin.top/2018/09/27/SSH%E5%88%9D%E6%8E%A2/"/>
    <id>https://fyin.top/2018/09/27/SSH%E5%88%9D%E6%8E%A2/</id>
    <published>2018-09-26T16:41:03.000Z</published>
    <updated>2018-09-26T16:44:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>SSH（Secure Socket Shell）是一种远程访问协议。它能够基于不安全的网络环境，实现强认证、加密传输，避免中间人攻击。<br>Telnet、RSH等协议采用明文传输，使用不可靠的密码，易受到监听、嗅探和中间人攻击。<br>SSH有安全漏洞。</p><h2 id="加密方式：非对称加密"><a href="#加密方式：非对称加密" class="headerlink" title="加密方式：非对称加密"></a>加密方式：非对称加密</h2><p>先看对称加密：</p><p>是加密和解密都使用同一个密钥（或者两个可以相互推算的密钥），这组密钥是两个或多个成员之间的共同秘密。常见的DES、3DES、AES、Blowfish、IDEA、RC5、RC6。优点是比较快。</p><p>非对称加密：<br>使用两个不同的密钥，且不能相互推算。一个公开，任意向外发布，称为公钥；另一个由用户秘密保管。数字签名就是基于公钥的特性。</p><p>加密过程：<br>任何人都可以使用公钥加密明文，但只有私钥持有者可以解密该密文。————购物网站登录过程，使用网站提供的公钥加密敏感信息，只有受信任的网络服务器可以解密信息。<br>某一用户使用私钥加密明文，通过公钥，任何人都可以解密秘文。————利用这一特性可以实现数字签名（私钥加密），通过电子证书（公钥解密）可以核实该信息是否来自某一用户。</p><h2 id="典型用途"><a href="#典型用途" class="headerlink" title="典型用途"></a>典型用途</h2><p>登录远程电脑，执行命令；也支持隧道协议、端口映射、X11连接等；还可以借助SFTP、rsync、SCP、FISH(Files transferred over shell protocol)、 FASP(Fast and Secure Protocol)等协议传输文件。<br>SSH使用C/S服务架构</p><h2 id="SSH协议框架："><a href="#SSH协议框架：" class="headerlink" title="SSH协议框架："></a>SSH协议框架：</h2><p>SSH协议框架中最主要的部分是三个协议：</p><p>传输层协议（The Transport Layer Protocol）：传输层协议提供服务器认证，数据机密性，信息完整性等的支持。<br>用户认证协议（The User Authentication Protocol）：用户认证协议为服务器提供客户端的身份鉴别。<br>连接协议（The Connection Protocol）：连接协议将加密的信息隧道复用成若干个逻辑通道，提供给更高层的应用协议使用。<br>同时还有为许多高层的网络安全应用协议提供扩展的支持。</p><p>各种高层应用协议可以相对地独立于SSH基本体系之外，并依靠这个基本框架，通过连接协议使用SSH的安全机制。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;SSH（Secure Socket Shell）是一种远程访问协议。它能够基于不安全的网络环境，实现强认证、加密传输，避免中间人攻击。&lt;br&gt;Telnet、RSH等协议采用明文传输，使用不可靠的密码，易受到监听、嗅探和中间人攻击。&lt;br&gt;SSH有安全漏洞。&lt;/p&gt;
&lt;h2 </summary>
      
    
    
    
    
    <category term="技术" scheme="https://fyin.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="网络" scheme="https://fyin.top/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>关于并发与并行</title>
    <link href="https://fyin.top/2018/09/02/%E5%85%B3%E4%BA%8E%E5%B9%B6%E5%8F%91%E4%B8%8E%E5%B9%B6%E8%A1%8C/"/>
    <id>https://fyin.top/2018/09/02/%E5%85%B3%E4%BA%8E%E5%B9%B6%E5%8F%91%E4%B8%8E%E5%B9%B6%E8%A1%8C/</id>
    <published>2018-09-02T12:39:20.000Z</published>
    <updated>2018-09-15T15:00:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>读CSAPP，增进了对并发与并行的理解，总结如下</p><blockquote><p><strong>并发</strong>：是一个通用概念，指一个同时有多个活动的系统。</p><p><strong>并行</strong>：利用各种并发的机制使系统运行得更快。</p></blockquote><p>从不同的计算机系统抽象层次上，并行可以有以下几重实现：</p><h4 id="1-线程级并行"><a href="#1-线程级并行" class="headerlink" title="1 线程级并行"></a>1 线程级并行</h4><p>引入线程，可以在一个进程内执行多个控制流。单处理器的并发是通过共享时间模拟出来的。</p><p><strong>多核</strong>处理器，多个CPU集成到一个芯片上，每个核有自己的L1、L2高速缓存，而共享更高层次的缓存。</p><p><strong>超线程</strong>处理器，每个CPU内部，执行多个控制流。实现的机制是CPU的某些硬件有多个备份，如程序计数器和寄存器文件，其他硬件部分只有一份（浮点数算术运算单元等）。</p><h4 id="2-指令及并行"><a href="#2-指令及并行" class="headerlink" title="2 指令及并行"></a>2 指令及并行</h4><p><strong>超标量</strong>：在<strong>流水线</strong>中，每个指令被分解为不同的步骤，将处理器硬件组织成一系列的阶段，每个阶段执行一个步骤。这些阶段可以并行操作，执行不同指令的不同部分。</p><p>超标量操作可以达到接近于一个时钟周期执行一条指令的速度。现代处理器一般都支持超标量。</p><h4 id="3-单指令多数据（SIMD）并行"><a href="#3-单指令多数据（SIMD）并行" class="headerlink" title="3 单指令多数据（SIMD）并行"></a>3 单指令多数据（SIMD）并行</h4><p>一些现代处理器拥有特殊的硬件，通过一条指令可以并行计算多份数据。</p><p>比如较新的Intel和AMD处理器可以并行对8对float进行加法运算；这种<strong>SIMD指令</strong>多是为了提高处理图像、视频等数据的处理速度。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;读CSAPP，增进了对并发与并行的理解，总结如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;并发&lt;/strong&gt;：是一个通用概念，指一个同时有多个活动的系统。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;并行&lt;/strong&gt;：利用各种并发的机制使系统运行得更快。&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="技术" scheme="https://fyin.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="计算机" scheme="https://fyin.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Do not go gentle into that night</title>
    <link href="https://fyin.top/2018/04/06/Do-not-go-gentle-into-that-night/"/>
    <id>https://fyin.top/2018/04/06/Do-not-go-gentle-into-that-night/</id>
    <published>2018-04-06T14:49:49.000Z</published>
    <updated>2018-04-06T15:15:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Do-not-go-gentle-into-that-good-night"><a href="#Do-not-go-gentle-into-that-good-night" class="headerlink" title="Do not go gentle into that good night"></a>Do not go gentle into that good night</h1><p><em>Dylan Thomas, 1914 - 1953</em></p><p>Do not go gentle into that good night,<br>Old age should burn and rave at close of day;<br>Rage, rage against the dying of the light.</p><p>Though wise men at their end know dark is right,<br>Because their words had forked no lightning they<br>Do not go gentle into that good night.</p><p>Good men, the last wave by, crying how bright<br>Their frail deeds might have danced in a green bay,<br>Rage, rage against the dying of the light.</p><p>Wild men who caught and sang the sun in flight,<br>And learn, too late, they grieved it on its way,<br>Do not go gentle into that good night.</p><p>Grave men, near death, who see with blinding sight<br>Blind eyes could blaze like meteors and be gay,<br>Rage, rage against the dying of the light.</p><p>And you, my father, there on the sad height,<br>Curse, bless, me now with your fierce tears, I pray.<br>Do not go gentle into that good night.<br>Rage, rage against the dying of the light.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Do-not-go-gentle-into-that-good-night&quot;&gt;&lt;a href=&quot;#Do-not-go-gentle-into-that-good-night&quot; class=&quot;headerlink&quot; title=&quot;Do not go gentle i</summary>
      
    
    
    
    
    <category term="读书" scheme="https://fyin.top/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>电影：冬眠</title>
    <link href="https://fyin.top/2018/03/25/%E7%94%B5%E5%BD%B1%EF%BC%9A%E5%86%AC%E7%9C%A0/"/>
    <id>https://fyin.top/2018/03/25/%E7%94%B5%E5%BD%B1%EF%BC%9A%E5%86%AC%E7%9C%A0/</id>
    <published>2018-03-25T09:59:24.000Z</published>
    <updated>2021-06-05T19:59:47.630Z</updated>
    
    <content type="html"><![CDATA[<h3 id="冬眠"><a href="#冬眠" class="headerlink" title="冬眠"></a>冬眠</h3><p>三个小时，每一帧都写着孤独和绝望</p><blockquote><p>你无聊是因为你没事做，放任自流。很明显，你非常无聊，人生中，你需要工作，需要热情，懒惰是罪恶之母。</p></blockquote><blockquote><p>因惧怕承受痛苦，你总是逃避,是啊，但我们需要勇气来面对真相，如果你想要了解真相，有些时候你要毫不犹豫地去摧毁事物，亲爱的艾登，你这位演员，忘记了真实，忘记了要做自己，换身份如换衣服，和你生活还要慢慢适应。</p></blockquote><blockquote><p>我承认，你是个成熟的人，忠诚，公平，诚恳；总体来说是这样，我也不能说什么，但有时候你利用这些品质来伤害别人，轻视，羞辱，击溃他们，你强大的道德感，让你憎恶这个世界，你憎恶信徒，因为对你来说，信仰是陈旧无知的标志；你也憎恨没有信仰的人，因为他们既没皈依宗教，也没有理想；你认为保守派，步步为营，想法太局限，年轻人想法又太自由，还会攻击传统观念，你总是宣扬那些大家都感兴趣的事情，但你其实觉得大家都是坏蛋，所以你痛恨所有人，你喜欢些什么呢？哪怕只有一次，如果你可以为那些你不喜欢的人辩护，或是不自吹自擂，一次都没有过；你知道为什么咱们离不开对方，我猜我可能挺享受的，我太年轻了，走不了，没勇气，也没钱，更没地方可去；但你不觉得悔恨吗，看着一个年轻女人，身体健康，如此骄傲，却溶解在如此的空虚，无聊，和恐惧之中；一开始我很害怕，现在我觉得羞愧，我浪费了最好的年华，我所有的美好品质，都在和你的争吵中，消失了，我变得固执，严厉，胆小，多疑；我不知道说些什么，我不知道我还能不能表达出感受，在同一个屋檐下，走上了不同的路，你走你的阳光道，我走我的独木桥，我们可以过得更好的，太晚了。</p></blockquote><blockquote><p>我们的青春暗淡无光，我们没学会如何快乐，或者说，如何让自己快乐</p></blockquote><blockquote><p>我们疲于奔命，做出好似大有可为的假象，每天早上我都有绝妙的想法，整天却都在无所事事。</p></blockquote><blockquote><p>尼哈尔， 我没离开，我没能离开，我现在，又老又疯，甚至变成了另一个人？不管你怎么想吧，我不知道，但这个新的自我，不让我离开。并不是因为你，才留下。伊斯坦布尔也没有什么我熟悉的东西，一切都很陌生，在别处也是，我谁都没有，只有你。每一分每一刻，我都想念你，我永远都说不出口，因为我太过骄傲，让我与你分离太过可怕，也不可能发生。但我知道你不再爱我，我知道我们回不到过去，我也并不后悔。将我当作仆从吧，亦或是俘虏，让我们一起生活，随你的心意。原谅我。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;冬眠&quot;&gt;&lt;a href=&quot;#冬眠&quot; class=&quot;headerlink&quot; title=&quot;冬眠&quot;&gt;&lt;/a&gt;冬眠&lt;/h3&gt;&lt;p&gt;三个小时，每一帧都写着孤独和绝望&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你无聊是因为你没事做，放任自流。很明显，你非常无聊，人生中，你需要</summary>
      
    
    
    
    
    <category term="电影" scheme="https://fyin.top/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>听一首歌</title>
    <link href="https://fyin.top/2017/08/29/%E5%90%AC%E4%B8%80%E9%A6%96%E6%AD%8C/"/>
    <id>https://fyin.top/2017/08/29/%E5%90%AC%E4%B8%80%E9%A6%96%E6%AD%8C/</id>
    <published>2017-08-29T08:16:11.000Z</published>
    <updated>2017-10-07T11:57:06.000Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=31273812&auto=0&height=66"></iframe><p>陈升</p>]]></content>
    
    
      
      
    <summary type="html">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=3127</summary>
      
    
    
    
    
    <category term="音乐" scheme="https://fyin.top/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>从今天开始</title>
    <link href="https://fyin.top/2017/08/25/%E4%BB%8E%E4%BB%8A%E5%A4%A9%E5%BC%80%E5%A7%8B/"/>
    <id>https://fyin.top/2017/08/25/%E4%BB%8E%E4%BB%8A%E5%A4%A9%E5%BC%80%E5%A7%8B/</id>
    <published>2017-08-25T08:39:32.000Z</published>
    <updated>2017-10-07T12:00:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>从今天开始，努力写博客。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从今天开始，努力写博客。&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="Test" scheme="https://fyin.top/tags/Test/"/>
    
  </entry>
  
</feed>
